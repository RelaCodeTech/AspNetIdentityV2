//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpaCloud.EF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevTestEntities : DbContext
    {
        public DevTestEntities()
            : base("name=DevTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AppointmentDiary> AppointmentDiaries { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<LookupBranchRegion> LookupBranchRegions { get; set; }
        public virtual DbSet<LookupCustomerType> LookupCustomerTypes { get; set; }
        public virtual DbSet<LookupEmployeeType> LookupEmployeeTypes { get; set; }
    
        public virtual int ADD_NEW_ROLE(string rOLE_CODE, string rOLE_DESC)
        {
            var rOLE_CODEParameter = rOLE_CODE != null ?
                new ObjectParameter("ROLE_CODE", rOLE_CODE) :
                new ObjectParameter("ROLE_CODE", typeof(string));
    
            var rOLE_DESCParameter = rOLE_DESC != null ?
                new ObjectParameter("ROLE_DESC", rOLE_DESC) :
                new ObjectParameter("ROLE_DESC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_ROLE", rOLE_CODEParameter, rOLE_DESCParameter);
        }
    
        public virtual int ADD_NEW_USER(string uSER_FNAME, string uSER_LNAME, Nullable<int> uSER_ROLE_ID)
        {
            var uSER_FNAMEParameter = uSER_FNAME != null ?
                new ObjectParameter("USER_FNAME", uSER_FNAME) :
                new ObjectParameter("USER_FNAME", typeof(string));
    
            var uSER_LNAMEParameter = uSER_LNAME != null ?
                new ObjectParameter("USER_LNAME", uSER_LNAME) :
                new ObjectParameter("USER_LNAME", typeof(string));
    
            var uSER_ROLE_IDParameter = uSER_ROLE_ID.HasValue ?
                new ObjectParameter("USER_ROLE_ID", uSER_ROLE_ID) :
                new ObjectParameter("USER_ROLE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_USER", uSER_FNAMEParameter, uSER_LNAMEParameter, uSER_ROLE_IDParameter);
        }
    }
}
