@model SpaCloud.Models.ViewModel.CreateEditTrtmntViewModel

<div class="modal-dialog" role="document">
    <div class="modal-content">


        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title" id="CreateTreatmentModalLabel">Add New Treatment for > @Model.SvcName</h4>
        </div>

        <div class="modal-body">

            @using (Html.BeginForm("CreateTreatment2", "SvcTrtmnt", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <p>
                        <b>Add/Remove from Existing Treatments below OR </b>
                        <button type="button" id="display-create-trtmnt-form" class="btn btn-success">Create New Treatment</button>
                    </p>

                    <div class="create-trtmnt-form">
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewTreatment.TreatmentName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.NewTreatment.TreatmentName, new { @class = "form-control", @disabled = "disabled", @id = "txt-create-new-trtmnt-nm" })
                                @Html.ValidationMessageFor(model => model.NewTreatment.TreatmentName)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewTreatment.TreatmentDesc, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.NewTreatment.TreatmentDesc, 3, 100, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NewTreatment.TreatmentDesc)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewTreatment.TreatmentDuration, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NewTreatment.TreatmentDuration, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NewTreatment.TreatmentDuration)
                            </div>

                            @Html.HiddenFor(model => model.SvcID)
                            @Html.HiddenFor(model => model.SvcName)
                        </div>


                        <div class="form-group modal-footer">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" value="Create" class="btn btn-success">Create</button>
                                <button id="cancel-create-trtmnt" type="button" class="btn btn-default">Cancel</button>
                            </div>
                        </div>
                    </div>

                    <hr />
                </div>
            }

            @using (Html.BeginForm("AddRmvExstngTrtmnts", "SvcTrtmnt", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <div class="existing-trtmnt-table">

                        <table class="table table-condensed">

                            <tr>
                                <td><b>Treatment Name</b></td>
                                <td><b>Duration</b></td>
                            </tr>

                            @for (int i = 0; i < Model.ExistingTreatments.Count; i++)
                            {
                                <tr class="@(Model.ExistingTreatments[i].CheckedStatus ? "info" : "")">
                                    <td>
                                        @Html.CheckBoxFor(model => Model.ExistingTreatments[i].CheckedStatus, new { @class = "chkbx-trtmnt" }) @Model.ExistingTreatments[i].TreatmentName
                                    </td>
                                    <td>
                                        @Model.ExistingTreatments[i].TreatmentDuration
                                        @Html.HiddenFor(model => Model.ExistingTreatments[i].TreatmentID)
                                    </td>
                                </tr>
                            }
                            @Html.HiddenFor(model => model.SvcID)
                            @Html.HiddenFor(model => model.SvcName)

                        </table>

                        <div class="form-group modal-footer">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" id="btn-add-existing-trtmnt" value="Add" class="btn btn-success">Add</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

            }

        </div>

    </div>
</div>

<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        //$(".chkbx-prdct").change(function () {
        //    //alert("checked - " + this.checked);

        //    if (this.checked)
        //        $(this).closest("tr").find('.txtbx-qtyrqd').removeAttr("disabled");
        //    else
        //        $(this).closest("tr").find('.txtbx-qtyrqd').prop("disabled", true);
        //});

        $(".create-trtmnt-form").hide();

        $("#display-create-trtmnt-form").click(function () {

            $(".create-trtmnt-form").toggle();

            $(".existing-trtmnt-table").toggle();

            if ($("#txt-create-new-trtmnt-nm").disabled) {
                $("#txt-create-new-trtmnt-nm").prop("disabled", true);
            }
            else {
                $("#txt-create-new-trtmnt-nm").prop("disabled", false);
            }
        });

        $("#cancel-create-trtmnt").click(function () {
            $(".create-trtmnt-form").toggle();

            $(".existing-trtmnt-table").toggle();

        });

    });


</script>

